/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Admin;

import Doctor.mrTablev2;
import Patient.login;
import Patient.user;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pangz
 */
public class AAP extends javax.swing.JPanel {
    JFrame frame;
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy");
    LocalDateTime now = LocalDateTime.now();
    String date = dtf.format(now);
    String time;
    
    javax.swing.DefaultComboBoxModel doctorModel = new javax.swing.DefaultComboBoxModel();
    javax.swing.DefaultComboBoxModel timeModel = new javax.swing.DefaultComboBoxModel();
    private DefaultTableModel container = new DefaultTableModel();
    
    private String columnName[] = {"Doctor's name","Patient's name","Time slot"};
    /**
     * Creates new form AAP
     */
    public AAP(JFrame frame) {
        this.frame = frame;
        container.setColumnIdentifiers(columnName);
        setBounds(0,0,1536,864);
        initComponents();
        
        try{
        FileReader fr = new FileReader("dailyAppointment.txt");
        BufferedReader br = new BufferedReader(fr);
        //show all doctor
        String line = null;
        
        while((line = br.readLine())!= null){
 
            String values[] = line.split(",");
            if(values[1].equals(date)){
                doctorModel.addElement(values[0]);

            }
  
        }

        br.close();
        fr.close();
        
        //show all appointment in table
        fr = new FileReader("Appointment.txt");
        br = new BufferedReader(fr);


        line = null;

        while((line = br.readLine())!= null){

            String values[] = line.split(",");
            if(values[3].equals(date)){
                String tableRow[] = {values[0],values[1],values[2]};
                container.addRow(tableRow);
            }

        }
        fr.close();
        br.close();
        
        
        
        
        }catch(IOException e){
            System.out.println("error");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel4.setText("HealthHaven \nClinic");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("New Appointment ");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Check Medical Record");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel8MouseReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("User Information");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel10MouseReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("Payment");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel11MouseReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel20.setText("Logout");
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel20MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(76, 76, 76)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(51, 51, 51)
                .addComponent(jLabel7)
                .addGap(40, 40, 40)
                .addComponent(jLabel11)
                .addGap(51, 51, 51)
                .addComponent(jLabel8)
                .addGap(57, 57, 57)
                .addComponent(jLabel20)
                .addGap(172, 172, 172))
        );

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel15.setText("Doctor ");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBox1.setModel(doctorModel);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBox3.setModel(timeModel);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(container);
        jTable1.setToolTipText("");
        jTable1.setRowHeight(40);
        jTable1.setRowMargin(10);
        jScrollPane1.setViewportView(jTable1);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel21.setText("Appointment List");

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 30)); // NOI18N
        jLabel18.setText("New Appointment");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel17.setText("Time Slot");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Patient Name");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jButton6.setBackground(new java.awt.Color(255, 204, 204));
        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton6.setText("Refresh time slot");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton5.setText("Make appointment");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(191, 191, 191))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(455, 455, 455)
                                .addComponent(jLabel21)))
                        .addContainerGap(38, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel18)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addGap(29, 29, 29)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jLabel20MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseReleased
        login panel = new login(frame);
        frame.remove(this);
        frame.add(panel);
        frame.revalidate();
        frame.repaint();

    }//GEN-LAST:event_jLabel20MouseReleased

    private void jLabel10MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseReleased
        APP panel = new APP(frame);
        frame.remove(this);
        frame.add(panel);
        frame.revalidate();
        frame.repaint();

    }//GEN-LAST:event_jLabel10MouseReleased

    private void jLabel11MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseReleased
        payment panel = new payment(frame);
        frame.remove(this);
        frame.add(panel);
        frame.revalidate();
        frame.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel11MouseReleased

    private void jLabel8MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseReleased
        AMR panel = new AMR(frame);
        frame.remove(this);
        frame.add(panel);
        frame.revalidate();
        frame.repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       timeModel.removeAllElements();
        container.setRowCount(0);
        try{
        FileReader fr = new FileReader("dailyAppointment.txt");
        BufferedReader br = new BufferedReader(fr);
        
        //show all time slot
        String line = null;
        while((line = br.readLine())!= null){
            
            String values[] = line.split(",");
            
            if(jComboBox1.getSelectedItem().equals(values[0]) && date.equals(values[1])){
                if(values[2].equals("true")){
                    timeModel.addElement("9.00-10.00");
                }
                if(values[3].equals("true")){
                    timeModel.addElement("10.00-11.00");
                }
                if(values[4].equals("true")){
                    timeModel.addElement("11.00-12.00");
                }
                if(values[5].equals("true")){
                    timeModel.addElement("12.00-1.00");
                }
                if(values[6].equals("true")){
                    timeModel.addElement("2.00-3.00");
                }
                if(values[7].equals("true")){
                    timeModel.addElement("3.00-4.00");;
                }
                if(values[8].equals("true")){
                    timeModel.addElement("4.00-5.00");
                }
            }
        }

        br.close();
        fr.close();
        
        //show all appointment in table
        fr = new FileReader("Appointment.txt");
        br = new BufferedReader(fr);
        
        
        line = null;
        
        while((line = br.readLine())!= null){
 
            String values[] = line.split(",");
            if(values[3].equals(date) && values[0].equals(jComboBox1.getSelectedItem())){
                String tableRow[] = {values[0],values[1],values[2]};
                container.addRow(tableRow);
            }
  
        }
        fr.close();
        br.close();
        }catch(IOException e){
            System.out.println("error");
        }
        
//        frame.remove(this);
//
//        Atimeslot panel = new Atimeslot(frame);
//        frame.add(panel);
        frame.revalidate();
        frame.repaint();

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        boolean emptyName = false;
        if(jTextField1.getText().isEmpty()){
            emptyName = true;        
        }
        time = String.valueOf(jComboBox3.getSelectedItem());
        
        if(emptyName == false){
            if (time != null){
                try{
                    //add new appointment to text file

                    FileReader fr = new FileReader("Appointment.txt");
                    BufferedReader br  = new BufferedReader(fr);
                    //
                    String table[] = new String[100];
                    String line = null;
                    int row = 0;
                    //
                    while((line = br.readLine()) != null){
                        String values[] = line.split(",");

                        table [row] = line;
                        row ++;

                    }
                    br.close();
                    fr.close();

                    FileWriter fw = new FileWriter("Appointment.txt");

                    for(int i=0; i<row; i++){
                        if (table[i] != null){
                            fw.append(table[i]+"\n");
                        }
                    }

                    String sentence = String.valueOf(jComboBox1.getSelectedItem())+","+jTextField1.getText()+","+time+","+date;
                    fw.append(sentence);

                    fw.close();

                    //update doctor schedule availability
                    fr = new FileReader("dailyAppointment.txt");
                    br  = new BufferedReader(fr);

                    table = new String[100];
                    line = null;
                    row = 0;

                    while((line = br.readLine()) != null){
                        String values[] = line.split(",");

                        if(values[0].equals(jComboBox1.getSelectedItem())){
                            if(time.equals("9.00-10.00")){
                                values[2] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("10.00-11.00")){
                                values[3] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("11.00-12.00")){
                                values[4] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("12.00-1.00")){
                                values[5] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("2.00-3.00")){
                                values[6] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("3.00-4.00")){
                                values[7] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                            if(time.equals("4.00-5.00")){
                                values[8] = "false";
                                table [row] = values[0]+","+values[1]+","+values[2]+","+values[3]+","+values[4]+","+values[5]+","+values[6]+","+
                                values[7]+","+values[8];
                                row ++;
                            }
                        }
                        else{
                            table [row] = line;
                            row ++;
                        }
                    }

                    fr.close();
                    br.close();

                    fw = new FileWriter("dailyAppointment.txt");

                    for(int i=0; i<row; i++){
                        if (table[i] != null){
                            fw.append(table[i]+"\n");
                        }
                    }

                    fw.close();
                }catch(IOException e) {
                    System.out.println("Some error occured");
                }


                JOptionPane.showMessageDialog(null,"Succesfully made appointment.","Information",JOptionPane.INFORMATION_MESSAGE);
                frame.revalidate();
                frame.repaint();
            }
            else{
                JOptionPane.showMessageDialog(null,"Please select a time slot first.","Information",JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please enter patient's name.","Information",JOptionPane.INFORMATION_MESSAGE);
        }
        

        //refresh table
        timeModel.removeAllElements();
        container.setRowCount(0);
        try{
            FileReader fr = new FileReader("dailyAppointment.txt");
            BufferedReader br = new BufferedReader(fr);

            //show all time slot
            String line = null;
            while((line = br.readLine())!= null){

                String values[] = line.split(",");

                if(jComboBox1.getSelectedItem().equals(values[0]) && date.equals(values[1])){
                    if(values[2].equals("true")){
                        timeModel.addElement("9.00-10.00");
                    }
                    if(values[3].equals("true")){
                        timeModel.addElement("10.00-11.00");
                    }
                    if(values[4].equals("true")){
                        timeModel.addElement("11.00-12.00");
                    }
                    if(values[5].equals("true")){
                        timeModel.addElement("12.00-1.00");
                    }
                    if(values[6].equals("true")){
                        timeModel.addElement("2.00-3.00");
                    }
                    if(values[7].equals("true")){
                        timeModel.addElement("3.00-4.00");
                    }
                    if(values[8].equals("true")){
                        timeModel.addElement("4.00-5.00");
                    }
                }
            }

            br.close();
            fr.close();
            
            //show all appointment in table
            fr = new FileReader("Appointment.txt");
            br = new BufferedReader(fr);


            line = null;

            while((line = br.readLine())!= null){

                String values[] = line.split(",");
                if(values[3].equals(date) && values[0].equals(jComboBox1.getSelectedItem())){
                    String tableRow[] = {values[0],values[1],values[2]};
                    container.addRow(tableRow);
                }

            }
            fr.close();
            br.close();
            
        }catch(IOException e){
            System.out.println("error");
        }


        frame.revalidate();
        frame.repaint();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
